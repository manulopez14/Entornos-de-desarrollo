Ejercicios

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Lenguajes de programación

1 ¿Qué diferencia existe entre los lenguajes declarativos y los imperativos?. Nombra al menos 2 de cada tipo.

En los declarativos se indica el resultado a obtener, mientras que en los imperativos se indican los pasos a seguir para obtener el resultado.

Ejemplos de lenguaje declarativo: SQL, Haskell.
Ejemplos de lenguaje imperativo: C++, Java.

2 ¿Explica qué es compilar? ¿Explica qué es interpretar?

Al compilar, se coge todo el código fuente y se transforma en código objeto para poder ejecutarlo. Al interpretar el código se ejecuta linea a linea sin pasar por un paso intermedio.

3 Ventajas de los lenguajes compilados.

Son más eficientes, una vez compilado el código la ejecución es más rápida.

4 Ventajas de los lenguajes interpretados.
 
No hay que compilar el código entero cada vez que se produce un cambio en éste.

5 Nombra 2 lenguajes compilados y otros 2 interpretados.
 
Compilados: Java, C++
Interpretados: PHP, Javascript

6 ¿Puede considerarse código objeto el bytecode generado en Java tras la compilación? Explica la respuesta.
 
Puede considerarse código objeto, pero está destinado solo a la máquina virtual de Java.

7 Pon un ejemplo de lenguaje de los siguientes tipos:

Bajo nivel: Ensamblador
Nivel medio: C
Alto nivel: Java
8 ¿Qué paradigma de programación siguen los siguientes lenguajes?

C: Imperativo estructurado
C++: Imperativo multiparadigma
SQL: Declarativo algebráico
Java: Imperativo orientado a objetos
Javascript: Imperativo multiparadigma
Lisp: Declarativo funcional
Prolog: Declarativo lógico
Puedes consultar el siguiente enlace:

https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n

9 Explica qué criterios pueden seguirse a la hora de elegir un lenguaje de de programación para el desarrollo software.
 
Campo de aplicación, experiencia previa, herramientas de desarrollo, documentación disponible, base de usuarios, reusabilidad, portabilidad, imposición del cliente...

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ciclo de vida del sofware

1 Define "Ciclo de vida del software".

El ciclo de vida del software es el conjunto de fases por las que pasa el software desde su análisis y diseño hasta su finalización, mantenimiento y posible desuso.

2 Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas.

Análisis:
Se determinan y definen las necesidades del cliente y los requisitos que debe cumplir el software
Diseño:
Se descompone y organiza el sistema en elementos que puedan ser trabajados por separado, especificando la interrelación y funcionalidad de los elementos componentes.
Codificación:
Se escribe el código fuente de cada uno de los elementos componentes.
Pruebas:
El objetivo de las pruebas es forzar al programa a que funcione de forma incorrecta para descubrir defectos, sometiendolo al máximo número de situaciones diferentes.
Mantenimiento:
Se realizan cambios ocasionales como mejoras de funcionalidad y correción de defectos durante la explotación del sistema.

3 Explica brevemente en qué consiste el modelo en cascada cuando hablamos de desarrollo de software.

Procedimiento lineal en el que se divide el trabajo en fases que inician tras finalizar la anterior. No hay posibilidad de vuelta atrás.

4 Ventajas e inconvenientes del modelo en cascada.

Ventajas: Sencillo y fácil de entender
Inconvenientes: No hay posibilidad de vuelta atrás

5 ¿Qué se entiende por verificación? ¿Y por validación?

Verificación: Se comprueba si el software cumple los requisitos de su especificación
Validación: Se comprueba si el software cumple las expectativas que el cliente espera

6 Explica cómo funciona el modelo de desarrollo mediante creación de prototipos.


    
7 Qué cuatro principios rigen el desarrollo ágil expresados en el Manifiesto Ágil?

8 ¿Qué es una historia de usuario? Consulta el siguiente enlace:
        https://es.wikipedia.org/wiki/Historias_de_usuario

    
9  SCRUM. Explica como funciona Scrum. Consulta los siguientes enlaces:
        https://proyectosagiles.org/que-es-scrum/
        https://proyectosagiles.org/como-funciona-scrum/

10 SCRUM. Define los siguientes términos:
        Product backlog.
        Sprint backlog.

11 SCRUM. En la terminología Scrum qué términos se utilizan como sinónimo de:
        Jefe de proyecto.
        Cliente.
        Equipo de desarrollo.

12 SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum. Consulta el siguiente enlace:
        https://proyectosagiles.org/requisitos-de-scrum/
